plugins{
  id 'com.github.johnrengelman.shadow' version '7.1.0'
  id 'java'
}
repositories {
  mavenCentral()
}
configurations {
  invoker
}
sourceCompatibility = '17'
ext{
  functionInvokerVersion = "1.1.0"
  functionsApiVersion = "1.0.4"
}

dependencies {
  compileOnly("com.google.cloud.functions:functions-framework-api:${functionsApiVersion}")
  invoker("com.google.cloud.functions.invoker:java-function-invoker:${functionInvokerVersion}")
  implementation platform('com.fasterxml.jackson:jackson-bom:2.13.2')
  implementation("com.fasterxml.jackson.core:jackson-databind")
  implementation('io.github.resilience4j:resilience4j-retry:1.7.1')

  // These dependencies are only used by the tests.
  testImplementation("com.google.cloud.functions:functions-framework-api:${functionsApiVersion}")
  testImplementation(platform('org.junit:junit-bom:5.8.1'))
  testImplementation('org.junit.jupiter:junit-jupiter')
  testImplementation("org.assertj:assertj-core:3.21.0")
  testImplementation("org.skyscreamer:jsonassert:1.5.0")
  testImplementation 'org.mockito:mockito-core:4.0.0'
  testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'
}
test {
  useJUnitPlatform()
}
shadowJar {
  mergeServiceFiles()
}

tasks.register("runFunction", JavaExec) {
  main = 'com.google.cloud.functions.invoker.runner.Invoker'
  classpath(configurations.invoker)
  inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
  args(
          '--target', project.findProperty('run.functionTarget') ?: 'functions.HelloHttp',
          '--port', project.findProperty('run.port') ?: 8080
  )
  doFirst {
    args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
  }
}
