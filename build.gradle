plugins{
  id 'com.github.johnrengelman.shadow' version '7.1.0'
  id 'java'
}
repositories {
  mavenCentral()
}
configurations {
  invoker
}
dependencies {
  // Every function needs this dependency to get the Functions Framework API.
  compileOnly 'com.google.cloud.functions:functions-framework-api:1.0.4'

  invoker('com.google.cloud.functions.invoker:java-function-invoker:1.0.3')

  // Function implementations can have additional dependencies like this.
  implementation 'com.google.code.gson:gson:2.8.8'
  implementation 'io.github.resilience4j:resilience4j-retry:1.7.1'

  // These dependencies are only used by the tests.
  testImplementation 'com.google.cloud.functions:functions-framework-api:1.0.4'
  testImplementation(platform('org.junit:junit-bom:5.8.1'))
  testImplementation('org.junit.jupiter:junit-jupiter')
  testImplementation 'com.google.truth:truth:1.1.3'
  testImplementation 'org.mockito:mockito-core:4.0.0'
  testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'
}
test {
  useJUnitPlatform()
}
shadowJar {
  mergeServiceFiles()
}

tasks.register("runFunction", JavaExec) {
  main = 'com.google.cloud.functions.invoker.runner.Invoker'
  classpath(configurations.invoker)
  inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
  args(
          '--target', project.findProperty('run.functionTarget') ?: '',
          '--port', project.findProperty('run.port') ?: 8080
  )
  doFirst {
    args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
  }
}
